function r(t){return!!new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$","i").test(t)}const i={props:{to:{type:[String,Object],default:""},target:{type:String,default:"_self",validator(t){return["_blank","_self"].includes(t)}},stopPropagation:{type:Boolean,default:!1}},computed:{toEqualsCurrentRoute(){if(this.to&&this.to.constructor.name==="Object"){if(this.to.name&&this.$route.name===this.to.name||this.to.path&&this.$route.path===this.to.path)return!0}else if(this.to&&!r(this.to)&&this.$router.resolve({path:this.to}).name===this.$route.name)return!0;return!1},href(){if(this.to){const t=this.$router.resolve(this.to);return t?t.href:r(this.to)?this.to:null}return null},isExternalLink(){return this.to?r(this.to):!1}},emits:["click"],methods:{onClick(t){this.stopPropagation&&t.stopPropagation(),t.preventDefault();const e=t.metaKey||t.ctrlKey,o=e?"_blank":this.target;if(this.to&&!this.isExternalLink)if(this.target==="_blank"||this.toEqualsCurrentRoute||e){const s=this.$router.resolve(this.to);window.open(s.href,o)}else this.$router.push(this.to);else this.to&&window.open(this.to,o);this.$emit("click")}}};export{i as n};
