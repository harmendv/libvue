@import "../themes/globals/fonts";

$sizes: (
    "large": (
        paddingX: 0.75rem,
        paddingY: 0.75rem,
        fontSize: $font-size-large,
    ),
    "default": (
        paddingX: 0.625rem,
        paddingY: 0.625rem,
        fontSize: $font-size,
    ),
    "small": (
        paddingX: 0.33rem,
        paddingY: 0.33rem,
        fontSize: $font-size-small,
    ),
    "tiny": (
        paddingX: 0.25rem,
        paddingY: 0.25rem,
        fontSize: $font-size-tiny,
    ),
);

@mixin size-mixin($selector: '', $pixelFix: false) {
    $self: &;
    @each $size, $sizeMap in $sizes {
        // Set font sizes
        &--size-#{$size} #{$selector},
        &--size-#{$size} {
            font-size: map-get($sizeMap, "fontSize");
            line-height: map-get($sizeMap, "fontSize");
        }

        @if($selector) {
            &--size-#{$size} #{$selector} {
                @if($pixelFix) {
                    padding: calc(map-get($sizeMap, "paddingY") - 2px) map-get($sizeMap, "paddingX") calc(map-get($sizeMap, "paddingY") - 1px);
                } @else {
                    padding: map-get($sizeMap, "paddingY") map-get($sizeMap, "paddingX");
                }
            }
        } @else {
            &--size-#{$size} {
                @if($pixelFix) {
                    padding: calc(map-get($sizeMap, "paddingY") - 2px) map-get($sizeMap, "paddingX") calc(map-get($sizeMap, "paddingY") - 1px);
                } @else {
                    padding: map-get($sizeMap, "paddingY") map-get($sizeMap, "paddingX");
                }
            }
        }
    }
}
