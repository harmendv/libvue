@import "../themes/globals/fonts";

$sizes: (
    "large": (
        paddingX: 0.75rem,
        paddingY: 0.75rem,
        fontSize: $font-size-large,
    ),
    "default": (
        paddingX: 0.625rem,
        paddingY: 0.625rem,
        fontSize: $font-size,
    ),
    "small": (
        paddingX: 0.33rem,
        paddingY: 0.33rem,
        fontSize: $font-size-small,
    ),
    "tiny": (
        paddingX: 0.25rem,
        paddingY: 0.25rem,
        fontSize: $font-size-tiny,
    ),
);

// $selector should not contain &__ otherwise the input check will not work
@mixin size-mixin($selector: '') {
    $self: &;
    @each $size, $sizeMap in $sizes {
        @if($selector) {
            &--size-#{$size} #{$selector} {
                padding: map-get($sizeMap, "paddingY") map-get($sizeMap, "paddingX");
                font-size: map-get($sizeMap, "fontSize");
                line-height: map-get($sizeMap, "fontSize");
            }
            // Fix weird 2 pixel bug for inputs
            &--size-#{$size} input#{$selector} {
                padding: calc(map-get($sizeMap, "paddingY") - 2px) map-get($sizeMap, "paddingX") calc(map-get($sizeMap, "paddingY") - 1px);
            }
            &--size-#{$size} {
                font-size: map-get($sizeMap, "fontSize");
                line-height: map-get($sizeMap, "fontSize");
            }
        } @else {
            &--size-#{$size} {
                padding: map-get($sizeMap, "paddingY") map-get($sizeMap, "paddingX");
                font-size: map-get($sizeMap, "fontSize");
                line-height: map-get($sizeMap, "fontSize");
            }
            input--size-#{$size} {
                padding: calc(map-get($sizeMap, "paddingY") - 2px) map-get($sizeMap, "paddingX");
            }
        }
    }
}
