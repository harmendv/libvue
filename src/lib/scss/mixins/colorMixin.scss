$colors: (
    "default": (
        normal: var(--color-default),
        dimmed: var(--color-default-dimmed),
    ),
    "danger": (
        normal: var(--color-danger),
        dimmed: var(--color-danger-dimmed),
    ),
    "warning": (
        normal: var(--color-warning),
        dimmed: var(--color-warning-dimmed),
    ),
    "success": (
        normal: var(--color-success),
        dimmed: var(--color-success-dimmed),
    ),
    "info": (
        normal: var(--color-info),
        dimmed: var(--color-info-dimmed),
    ),
    "primary": (
        normal: var(--color-primary),
        dimmed: var(--color-primary-dimmed),
    ),
    "secondary": (
        normal: var(--color-secondary),
        dimmed: var(--color-secondary-dimmed),
    ),
);

@mixin color-mixin {
    // Walk through each color and create classes for every combination of colorType + color

    @each $color, $classMap in $colors {
        // Solid
        &--color-solid-#{$color} {
            background-color: map-get($classMap, "normal");
            color: var(--color-white);
        }
        // Solid Light
        &--color-solid-dimmed-#{$color} {
            background-color: map-get($classMap, "dimmed");
            @if $color == "default" {
                color: var(--text-color);
            } @else {
                color: map-get($classMap, "normal");
            }
        }
        // Outline
        &--color-outline-#{$color} {
            border: 1px solid map-get($classMap, "normal");
            color: map-get($classMap, "normal");
        }
        // Outline Dimmed
        &--color-outline-dimmed-#{$color} {
            border: 1px solid map-get($classMap, "dimmed");
            color: map-get($classMap, "normal");
        }
        // Ghost
        &--color-ghost-#{$color} {
            color: map-get($classMap, "normal");
            &:hover {
                background-color: map-get($classMap, "dimmed");
            }
        }
    }
}
